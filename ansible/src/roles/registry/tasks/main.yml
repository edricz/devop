---

- name: Create certificate directory
  file: path={{ item }} state=directory
  with_items:
    - /local/registry/certs
    - /local/registry/docker

- name: Copy domain certificate
  copy:
    content: "{{ internal_domain_crt }}"
    dest: /local/registry/certs/domain.crt
    owner: root
    group: root
    mode: 0600

- name: Copy domain private key
  copy:
    content: "{{ internal_domain_key }}"
    dest: /local/registry/certs/domain.key
    owner: root
    group: root
    mode: 0600

- name: Create registry configuration file
  template:
    src: 'config.yml'
    dest: '/local/registry/docker/registry-config.yml'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart registry' ]

- name: Deploy registry container
  docker:
    name: registry
    restart_policy: on-failure
    restart_policy_retry: 5
    image: registry:2
    state: reloaded
    pull: always
    net: bridge
    expose:
      - 443
    ports:
      - "0.0.0.0:5000:443"
    volumes:
      - /local/registry/certs:/certs
      - /local/registry/docker/registry-config.yml:/etc/docker/registry/config.yml
    env:
      BACKEND_SERVICE: "registry"
  register: result

- name: Add 
  lineinfile:
    dest: /etc/hosts
    regexp: "{{ registry_server }}"
    line: "{{ docker_containers[0].NetworkSettings.IPAddress }} {{ registry_server }}"
    owner: root
    group: root
    mode: 0644
  when: docker_containers[0].NetworkSettings.IPAddress is defined
