---
- name: Install nginx package
  apt:
    pkg: nginx
    state: latest

- name: Copy over custom nginx binary
  docker:
    name: nginx-install
    image: "{{ registry_service }}/nginx:latest"
    state: restarted
    pull: always
    command: cp -fv /usr/sbin/nginx /target/nginx.custom
    volumes:
      - /usr/sbin:/target

- name: Get current nginx checksum
  stat: path=/usr/sbin/nginx
  register: nginx_stat

- name: Get custom nginx checksum
  stat: path=/usr/sbin/nginx.custom
  register: nginx_custom_stat

- name: Install custom nginx binary
  command: mv /usr/sbin/nginx.custom /usr/sbin/nginx
  notify:
    - Test Nginx Config
    - Restart Nginx
  when: nginx_stat['stat']['md5'] != nginx_custom_stat['stat']['md5']

- name: Create nginx cache dir
  file:
    path: /var/cache/nginx
    state: directory
    owner: 'www-data'
    group: 'www-data'
    mode: '0755'

- name: Add nginx config
  copy:
    src: 'nginx.conf'
    dest: '/etc/nginx/nginx.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify:
    - Test Nginx Config
    - Reload Nginx

- name: Create nginx loadbalancer config dir
  file:
    path: /etc/nginx/conf.d/lb
    state: directory
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: Add nginx http services config
  template:
    src: 'services.conf'
    dest: '/etc/nginx/conf.d/lb/services.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify:
    - Test Nginx Config
    - Reload Nginx

- name: Add nginx tcp services config
  copy:
    src: 'etc/nginx/conf.d/lb/tcp_services.conf'
    dest: '/etc/nginx/conf.d/lb/tcp_services.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify:
    - Test Nginx Config
    - Reload Nginx

- name: Add HtAuth user
  htpasswd:
    path: /etc/nginx/htpasswd
    name: ansible_user
    password: "{{ service_pass }}"

- name: Create confd dirs
  file:
    path: "{{ item }}"
    state: directory
    owner: 'root'
    group: 'root'
    mode: '0755'
  with_items:
    - /etc/confd/templates
    - /etc/confd/conf.d

- name: Add service template
  copy: 
    src: 'etc/confd/templates/haproxy.tmpl'
    dest: '/etc/confd/templates/haproxy.tmpl'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: Add service config
  copy: 
    src: 'etc/confd/conf.d/services.toml'
    dest: '/etc/confd/conf.d/services.toml'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: Start Nginx service
  service: name=nginx state=started

- name: Add Root Etcd Key for Roles
  command: 'curl -sSL http://127.0.0.1:4001/v2/keys/roles -XPUT -d dir=true'

- name: Start confd-haproxy container
  docker:
    privileged: True
    name: confd-haproxy
    restart_policy: on-failure
    restart_policy_retry: 5
    image: "{{ registry_service }}/confd-haproxy:latest"
    state: reloaded
    pull: always
    net: host
    env:
      ETCD_HOST: "{{ ansible_eth0.ipv4.address }}:4001"
    volumes:
      - /etc/confd:/etc/confd
